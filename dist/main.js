(()=>{"use strict";var e={466:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Itim&family=Open+Sans&family=Raleway&family=Roboto&family=Sedgwick+Ave&family=Shadows+Into+Light&display=swap);"]),a.push([e.id,'*{margin:0;padding:0;font-size:100%;border:0;box-sizing:border-box;font-family:"Open Sans",sans-serif}#container{display:grid;grid-template-columns:minmax(100px, 1fr) 5fr;grid-template-rows:80px calc(100vh - 110px) 30px}header{background-color:#292524;grid-row:1/2;grid-column:1/-1}header h1{color:#fff}aside{background-color:#f5f5f4;grid-row:2/3;grid-column:1/2;display:flex;flex-direction:column;gap:20px}aside .project-text{font-size:1.3rem}aside .sidebar-static,aside .sidebar-dynamic{display:flex;flex-direction:column;gap:5px}main{background-color:#fafafa;grid-row:2/3;grid-column:2/3;display:flex;flex-direction:column}footer{background-color:#292524;color:#fff;grid-row:3/4;grid-column:1/-1;display:flex;justify-content:center;align-items:center}footer span{font-style:italic}.modal{position:fixed;left:0;top:0;width:100%;height:100%;visibility:hidden;background-color:rgba(0,0,0,.5);display:flex;justify-content:center;align-items:center}.modal .modal-content{background-color:#fafafa;padding:15px 20px;border-radius:4px}.modal form{display:flex;flex-direction:column;align-items:center;gap:15px}.show-modal{visibility:visible}.hide{display:none}',"",{version:3,sources:["webpack://./src/css/styles.scss"],names:[],mappings:"AAQA,EACE,QAAA,CACA,SAAA,CACA,cAAA,CACA,QAAA,CACA,qBAAA,CACA,kCAAA,CAGF,WACE,YAAA,CACA,4CAAA,CACA,gDAAA,CAGF,OACE,wBAtBa,CAuBb,YAAA,CACA,gBAAA,CAEA,UACE,UAvBS,CA2Bb,MACE,wBA9Bc,CA+Bd,YAAA,CACA,eAAA,CAEA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,oBACE,gBAAA,CAGF,6CACE,YAAA,CACA,qBAAA,CACA,OAAA,CAIJ,KACE,wBAjDW,CAkDX,YAAA,CACA,eAAA,CAEA,YAAA,CACA,qBAAA,CAGF,OACE,wBA5Da,CA6Db,UA1DW,CA2DX,YAAA,CACA,gBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,YACE,iBAAA,CAIJ,OACE,cAAA,CACA,MAAA,CACA,KAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,+BAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,sBACE,wBApFS,CAqFT,iBAAA,CACA,iBAAA,CAGF,YACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,QAAA,CAIJ,YACE,kBAAA,CAGF,MACE,YAAA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Itim&family=Open+Sans&family=Raleway&family=Roboto&family=Sedgwick+Ave&family=Shadows+Into+Light&display=swap');\n\n$header-color: #292524;\n$footer-color: #292524;\n$sidebar-color: #f5f5f4;\n$main-color: #fafafa;\n$white-font: #ffffff;\n\n* {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  border: 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', sans-serif;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr) 5fr;\n  grid-template-rows: 80px calc(100vh - 110px) 30px;\n}\n\nheader {\n  background-color: $header-color;\n  grid-row: 1 / 2;\n  grid-column: 1 / -1;\n\n  h1 {\n    color: $white-font;\n  }\n}\n\naside {\n  background-color: $sidebar-color;\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .project-text {\n    font-size: 1.3rem;\n  }\n\n  .sidebar-static, .sidebar-dynamic{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n}\n\nmain {\n  background-color: $main-color;\n  grid-row: 2 / 3;\n  grid-column: 2 / 3;\n\n  display: flex;\n  flex-direction: column;\n}\n\nfooter {\n  background-color: $footer-color;\n  color: $white-font;\n  grid-row: 3 / 4;\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    font-style: italic;\n  }\n}\n\n.modal {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .modal-content {\n    background-color: $main-color;\n    padding: 15px 20px;\n    border-radius: 4px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n  }\n}\n\n.show-modal {\n  visibility: visible;\n}\n\n.hide{\n  display: none;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],l=o.base?d[0]+o.base:d[0],s=i[l]||0,A="".concat(l," ").concat(s);i[l]=s+1;var u=n(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(m);else{var p=r(m,o);o.byIndex=c,t.splice(c,0,{identifier:A,updater:p,references:1})}a.push(A)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=n(i[a]);t[c].references--}for(var d=o(e,r),l=0;l<i.length;l++){var s=n(i[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}i=d}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},632:(e,t,n)=>{var o=n(379),r=n.n(o),i=n(795),a=n.n(i),c=n(569),d=n.n(c),l=n(565),s=n.n(l),A=n(216),u=n.n(A),m=n(589),p=n.n(m),f=n(466),C={};C.styleTagTransform=p(),C.setAttributes=s(),C.insert=d().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=u(),r()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals,n(666).H.submitTodoListener()},389:(e,t,n)=>{n.d(t,{$f:()=>l,LG:()=>m,ZY:()=>a,cQ:()=>i,rS:()=>d,rz:()=>s,zR:()=>A});var o=n(183);const r=document.querySelector("#container"),i=(new Date).toJSON().slice(0,10),a={createTodoButton:function(){const e=document.createElement("button");return e.setAttribute("id","new-todo"),e.textContent="New Todo",e},createProjectButton:function(){const e=document.createElement("button");return e.setAttribute("id","new-project"),e.textContent="New Project",e},createEditButton:function(e){const t=document.createElement("button");return t.setAttribute("id","btnEdit"),t.textContent="Edit",t.setAttribute("data-id",`${e}`),t},createRemoveButton:function(e){const t=document.createElement("button");return t.setAttribute("id","btnRemove"),t.textContent="Remove",t.setAttribute("data-id",`${e}`),t}},c=(()=>{const e=document.createElement("header"),t=document.createElement("h1");return t.textContent="Todo List",e.append(t),e})(),d=(()=>{const e=document.createElement("aside"),t=document.createElement("div");t.classList.add("sidebar-static");const n=document.createElement("div");n.classList.add("sidebar-dynamic");const o=document.createElement("span");return o.classList.add("project-text"),o.textContent="Projects",t.append(l("All","calendar-clear-outline"),l("Today","today-outline"),l("Upcoming","calendar-outline")),n.append(o),e.append(t,n,a.createProjectButton()),{sidebar:e,sidebarDynamic:n}})();function l(e,t){const n=document.createElement("span"),o=document.createElement("ion-icon");o.setAttribute("name",`${t}`);const r=document.createElement("button");return r.textContent=`${e}`,r.setAttribute("id",`button-${e}`),n.append(o,r),n}const s=document.createElement("main");function A(e){const t=document.createElement("span");t.textContent=`${e}`,s.append(t)}const u=(()=>{const e=document.createElement("footer"),t=document.createElement("span");return t.textContent="by 21ance",e.append(t),e})(),m=(()=>{const e=document.createElement("div");e.classList.add("modal"),e.setAttribute("id","modal");const t=document.createElement("div");t.classList.add("modal-content");const n=document.createElement("form"),o=document.createElement("input");o.setAttribute("id","title"),o.placeholder="Title: Morning exercise",o.required=!0;const r=document.createElement("input");r.setAttribute("id","description"),r.placeholder="Details: 5km run";const a=document.createElement("input");a.setAttribute("type","date"),a.setAttribute("id","date"),a.setAttribute("min",`${i}`);const c=document.createElement("button");return c.textContent="Add Todo",n.append(o,r,a,c),t.append(n),e.append(t),{modal:e,form:n}})();r.append(c,d.sidebar,s,u,m.modal),(0,o.I)("All"),(0,o.Y)()},666:(e,t,n)=>{n.d(t,{H:()=>c,O:()=>a});var o=n(389),r=n(833);var i=n(183);const a={sidebarListener:function(){document.querySelectorAll(".sidebar-dynamic button, .sidebar-static button").forEach((e=>{e.addEventListener("click",(e=>{(0,i.I)(e.target.textContent)}))}))},newProjectListener:function(){let e=document.querySelector("#new-project");e.addEventListener("click",(t=>{const n=(()=>{e.classList.toggle("hide");const t=document.createElement("div"),n=document.createElement("input");n.placeholder="Project Name";const r=document.createElement("ion-icon");r.setAttribute("name","checkmark");const i=document.createElement("ion-icon");return i.setAttribute("name","close"),t.append(n,i,r),o.rS.sidebar.append(t),{btnAdd:r,btnCancel:i}})();function i(){e.classList.toggle("hide");let t=document.querySelector("aside");t.removeChild(t.lastChild)}n.btnAdd.addEventListener("click",(e=>{const t=document.querySelector('input[placeholder="Project Name"]').value;var n;""!=t&&(n=t,r.K.projectList.push(n),localStorage.setItem("Projects",JSON.stringify(r.K.projectList)),o.rS.sidebarDynamic.append((0,o.$f)(t,"clipboard-outline")),i())})),n.btnCancel.addEventListener("click",(e=>{i()}))}))}},c=(()=>{function e(){o.LG.modal.classList.toggle("show-modal")}return window.addEventListener("click",(t=>{t.target===modal&&e()})),{newTodoListener:function(){document.querySelector("#new-todo").addEventListener("click",(t=>{e()}))},submitTodoListener:function(){let t=document.querySelector("form");t.addEventListener("submit",(n=>{((e,t,n,o)=>{const i={project:e,title:t,description:n,dueDate:o};r.K.allTodoList.push(i)})(document.querySelector("main").getAttribute("id"),document.querySelector("#title").value,document.querySelector("#description").value,document.querySelector("#date").value),localStorage.setItem("All",JSON.stringify(r.K.allTodoList)),e(),t.reset(),(0,i.I)(o.rz.getAttribute("id")),n.preventDefault()}))},editListener:function(){document.querySelectorAll('button[id="btnEdit"]').forEach((e=>{e.addEventListener("click",(t=>{console.log(e)}))}))},removeListener:function(){document.querySelectorAll('button[id="btnRemove"]').forEach((e=>{e.addEventListener("click",(t=>{r.K.allTodoList.splice(e.dataset.id,1),localStorage.setItem("All",JSON.stringify(r.K.allTodoList)),(0,i.I)(o.rz.getAttribute("id"))}))}))}}})()},833:(e,t,n)=>{n.d(t,{K:()=>o});const o={allTodoList:JSON.parse(localStorage.getItem("All")||"[]"),projectList:JSON.parse(localStorage.getItem("Projects")||"[]")}},183:(e,t,n)=>{n.d(t,{I:()=>c,Y:()=>d});var o=n(389),r=n(833),i=n(666);function a(e,t,n){const r=document.createElement("div"),i=document.createElement("span");i.textContent=`${e}`;const a=document.createElement("span");return a.textContent=`${t}`,r.append(i,a,o.ZY.createEditButton(`${n}`),o.ZY.createRemoveButton(`${n}`)),o.rz.append(r)}function c(e){!function(){let e=o.rz.childElementCount;for(let t=0;t<e;t++)o.rz.removeChild(o.rz.lastChild)}(),o.rz.append(o.ZY.createTodoButton()),o.rz.setAttribute("id",e),(0,o.zR)(e);for(let t=0;t<r.K.allTodoList.length;t++)"All"==e&&a(r.K.allTodoList[t].title,r.K.allTodoList[t].dueDate,t),"Today"==e&&r.K.allTodoList[t].dueDate==o.cQ&&a(r.K.allTodoList[t].title,r.K.allTodoList[t].dueDate,t),e==r.K.allTodoList[t].project&&"All"!=e&&"Today"!=e&&a(r.K.allTodoList[t].title,r.K.allTodoList[t].dueDate,t);i.H.newTodoListener(),i.H.editListener(),i.H.removeListener()}function d(){!function(){let e=o.rS.sidebarDynamic.childElementCount;for(let t=0;t<e-1;t++)o.rz.removeChild(o.rS.sidebarDynamic.lastChild)}();for(let e=0;e<r.K.projectList.length;e++)o.rS.sidebarDynamic.append((0,o.$f)(`${r.K.projectList[e]}`,"clipboard-outline"));i.O.sidebarListener(),i.O.newProjectListener()}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,n(389),n(632)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,