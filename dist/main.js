(()=>{"use strict";var e={466:(e,t,n)=>{n.d(t,{Z:()=>c});var o=n(537),r=n.n(o),a=n(645),i=n.n(a)()(r());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Itim&family=Open+Sans&family=Raleway&family=Roboto&family=Sedgwick+Ave&family=Shadows+Into+Light&display=swap);"]),i.push([e.id,'*{margin:0;padding:0;font-size:100%;border:0;box-sizing:border-box;font-family:"Open Sans",sans-serif}#container{display:grid;grid-template-columns:minmax(100px, 1fr) 5fr;grid-template-rows:80px calc(100vh - 110px) 30px}header{background-color:#292524;grid-row:1/2;grid-column:1/-1}header h1{color:#fff}aside{background-color:#f5f5f4;grid-row:2/3;grid-column:1/2;display:flex;flex-direction:column;gap:20px}aside .project-text{font-size:1.3rem}aside .sidebar-static,aside .sidebar-dynamic{display:flex;flex-direction:column;gap:5px}main{background-color:#fafafa;grid-row:2/3;grid-column:2/3;display:flex;flex-direction:column}footer{background-color:#292524;color:#fff;grid-row:3/4;grid-column:1/-1;display:flex;justify-content:center;align-items:center}footer span{font-style:italic}.modal{position:fixed;left:0;top:0;width:100%;height:100%;visibility:hidden;background-color:rgba(0,0,0,.5);display:flex;justify-content:center;align-items:center}.modal .modal-content{background-color:#fafafa;padding:15px 20px;border-radius:4px}.modal form{display:flex;flex-direction:column;align-items:center;gap:15px}.show-modal{visibility:visible}',"",{version:3,sources:["webpack://./src/css/styles.scss"],names:[],mappings:"AAQA,EACE,QAAA,CACA,SAAA,CACA,cAAA,CACA,QAAA,CACA,qBAAA,CACA,kCAAA,CAGF,WACE,YAAA,CACA,4CAAA,CACA,gDAAA,CAGF,OACE,wBAtBa,CAuBb,YAAA,CACA,gBAAA,CAEA,UACE,UAvBS,CA2Bb,MACE,wBA9Bc,CA+Bd,YAAA,CACA,eAAA,CAEA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,oBACE,gBAAA,CAGF,6CACE,YAAA,CACA,qBAAA,CACA,OAAA,CAIJ,KACE,wBAjDW,CAkDX,YAAA,CACA,eAAA,CAEA,YAAA,CACA,qBAAA,CAGF,OACE,wBA5Da,CA6Db,UA1DW,CA2DX,YAAA,CACA,gBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,YACE,iBAAA,CAIJ,OACE,cAAA,CACA,MAAA,CACA,KAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,+BAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,sBACE,wBApFS,CAqFT,iBAAA,CACA,iBAAA,CAGF,YACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,QAAA,CAIJ,YACE,kBAAA",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Itim&family=Open+Sans&family=Raleway&family=Roboto&family=Sedgwick+Ave&family=Shadows+Into+Light&display=swap');\n\n$header-color: #292524;\n$footer-color: #292524;\n$sidebar-color: #f5f5f4;\n$main-color: #fafafa;\n$white-font: #ffffff;\n\n* {\n  margin: 0;\n  padding: 0;\n  font-size: 100%;\n  border: 0;\n  box-sizing: border-box;\n  font-family: 'Open Sans', sans-serif;\n}\n\n#container {\n  display: grid;\n  grid-template-columns: minmax(100px, 1fr) 5fr;\n  grid-template-rows: 80px calc(100vh - 110px) 30px;\n}\n\nheader {\n  background-color: $header-color;\n  grid-row: 1 / 2;\n  grid-column: 1 / -1;\n\n  h1 {\n    color: $white-font;\n  }\n}\n\naside {\n  background-color: $sidebar-color;\n  grid-row: 2 / 3;\n  grid-column: 1 / 2;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  .project-text {\n    font-size: 1.3rem;\n  }\n\n  .sidebar-static, .sidebar-dynamic{\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n}\n\nmain {\n  background-color: $main-color;\n  grid-row: 2 / 3;\n  grid-column: 2 / 3;\n\n  display: flex;\n  flex-direction: column;\n}\n\nfooter {\n  background-color: $footer-color;\n  color: $white-font;\n  grid-row: 3 / 4;\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    font-style: italic;\n  }\n}\n\n.modal {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  visibility: hidden;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .modal-content {\n    background-color: $main-color;\n    padding: 15px 20px;\n    border-radius: 4px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n  }\n}\n\n.show-modal {\n  visibility: visible;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var l=this[c][0];null!=l&&(i[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var l=e[c],s=o.base?l[0]+o.base:l[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=n(A),p={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,o);o.byIndex=c,t.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var l=o(e,r),s=0;s<a.length;s++){var d=n(a[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}a=l}}},569:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),o=n(795),r=n.n(o),a=n(569),i=n.n(a),c=n(565),l=n.n(c),s=n(216),d=n.n(s),A=n(589),u=n.n(A),p=n(466),m={};m.styleTagTransform=u(),m.setAttributes=l(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=d(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const f=(()=>{let e=[];e=JSON.parse(localStorage.getItem("All")||"[]");let t=[];return t=JSON.parse(localStorage.getItem("Projects")||"[]"),{allTodoList:e,projectList:t}})();function C(e,t){const n=document.createElement("div"),o=document.createElement("span"),r=document.createElement("span"),a=document.createElement("button"),i=document.createElement("button");return a.textContent="Edit",i.textContent="Remove",o.textContent=`${e}`,r.textContent=`${t}`,n.append(o,r,a,i),w.append(n)}function g(e){!function(){let e=w.childElementCount;for(let t=0;t<e;t++)w.removeChild(w.lastChild)}(),w.append(v.newTodo),w.setAttribute("id",e),function(e){const t=document.createElement("span");t.textContent=`${e}`,w.append(t)}(e);let t=JSON.parse(localStorage.getItem("All")||"[]");for(let n=0;n<t.length;n++)"All"==e&&C(t[n].title,t[n].dueDate),"Today"==e&&t[n].dueDate==y&&C(t[n].title,t[n].dueDate),e==t[n].project&&"All"!=e&&"Today"!=e&&C(t[n].title,t[n].dueDate)}const b=document.querySelector("#container"),y=(new Date).toJSON().slice(0,10),v=(()=>{const e=document.createElement("button");e.setAttribute("id","new-todo"),e.textContent="New Todo";const t=document.createElement("button");return t.setAttribute("id","new-project"),t.textContent="New Project",{newTodo:e,newProject:t}})(),x=(()=>{const e=document.createElement("header"),t=document.createElement("h1");return t.textContent="Todo List",e.append(t),e})(),h=(()=>{const e=document.createElement("aside"),t=document.createElement("div");t.classList.add("sidebar-static");const n=document.createElement("div");n.classList.add("sidebar-dynamic");const o=document.createElement("span");o.classList.add("project-text"),o.textContent="Projects",t.append(E("All","calendar-clear-outline"),E("Today","today-outline"),E("Upcoming","calendar-outline")),n.append(o);for(let e=0;e<f.projectList.length;e++)n.append(E(`${f.projectList[e]}`,"pricetag-outline"));return e.append(t,n,v.newProject),{sidebar:e,sidebarDynamic:n}})();function E(e,t){const n=document.createElement("span"),o=document.createElement("ion-icon");o.setAttribute("name",`${t}`);const r=document.createElement("button");return r.textContent=`${e}`,r.setAttribute("id",`button-${e}`),n.append(o,r),n}const w=document.createElement("main"),S=(()=>{const e=document.createElement("footer"),t=document.createElement("span");return t.textContent="by 21ance",e.append(t),e})(),B=(()=>{const e=document.createElement("div");e.classList.add("modal"),e.setAttribute("id","modal");const t=document.createElement("div");t.classList.add("modal-content");const n=document.createElement("form"),o=document.createElement("input");o.setAttribute("id","title"),o.placeholder="Title: Morning exercise",o.required=!0;const r=document.createElement("input");r.setAttribute("id","description"),r.placeholder="Details: 5km run";const a=document.createElement("input");a.setAttribute("type","date"),a.setAttribute("id","date"),a.setAttribute("min",`${y}`);const i=document.createElement("button");return i.textContent="Add Todo",n.append(o,r,a,i),t.append(n),e.append(t),{modal:e,form:n}})(),j=(()=>{function e(){B.modal.classList.toggle("show-modal")}return v.newTodo.addEventListener("click",(()=>{B.modal.classList.toggle("show-modal")})),window.addEventListener("click",(function(t){t.target===modal&&e()})),{formHelper:function(){document.querySelector("form").reset(),e(),g(w.getAttribute("id"))}}})();B.form.addEventListener("submit",(e=>{((e,t,n,o)=>{const r={project:document.querySelector("main").getAttribute("id"),title:document.querySelector("#title").value,description:document.querySelector("#description").value,dueDate:document.querySelector("#date").value};f.allTodoList.push(r)})(),localStorage.setItem("All",JSON.stringify(f.allTodoList)),e.preventDefault(),j.formHelper()})),v.newProject.addEventListener("click",(e=>{const t=prompt("Project Name");var n;n=`${t}`,f.projectList.push(n),localStorage.setItem("Projects",JSON.stringify(f.projectList)),h.sidebarDynamic.append(E(`${t}`,"pricetag-outline"))})),b.append(x,h.sidebar,w,S,B.modal),g("All"),document.querySelectorAll(".sidebar-dynamic button, .sidebar-static button").forEach((e=>{e.addEventListener("click",(e=>{g(e.target.textContent),console.log(e.target)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,